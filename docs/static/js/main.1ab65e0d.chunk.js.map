{"version":3,"sources":["utils/constants.js","components/Picker.js","services/rgbToHex.js","services/pickerDetector.js","services/gradientCanvas.js","components/Canvas.js","services/hueCanvas.js","components/Hue.js","components/Input.js","components/App.js","index.js"],"names":["widthCanvas","Picker","props","positionPicker","top","positionX","left","positionY","borderColor","heightCanvas","className","style","border","rgbToHex","r","g","b","toString","pickerDetector","canvasRef","event","canvas","current","context","getContext","rect","getBoundingClientRect","x","clientX","y","clientY","data","getImageData","colorHex","slice","gradientCanvasGenerator","colorHue","fillStyle","fillRect","width","height","grd","createLinearGradient","addColorStop","grd2","Canvas","useRef","useEffect","color","ref","String","onClick","pickerData","handleColorPicker","hueCanvasGenerator","gradient","Hue","handleColorHue","Input","handleChange","bind","ev","target","value","includes","this","handleColorInput","htmlFor","id","type","colorInput","onChange","placeholder","Component","App","useState","colorSelected","setColorSelected","setColorInput","colorStartGradient","setColorStartGradient","setPositionPicker","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ab65e0d.chunk.js","sourcesContent":["const heightCanvas = 100;\nconst widthCanvas = 200;\n\nexport { heightCanvas, widthCanvas };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/components/_picker.scss';\nimport { heightCanvas } from '../utils/constants';\n\nconst Picker = (props) => {\n  const { positionX, positionY } = props.positionPicker;\n  const top = positionX - 10;\n  const left = positionY - 10;\n  let borderColor = 'black';\n\n  if (top > heightCanvas / 2) {\n    borderColor = 'white';\n  }\n  return (\n    <div\n      className=\"picker\"\n      style={{\n        top: `${top}px`,\n        left: `${left}px`,\n        border: `2px solid ${borderColor}`,\n      }}\n    ></div>\n  );\n};\n\nexport default Picker;\n\nPicker.propTypes = {\n  positionPicker: PropTypes.shape({\n    positionX: PropTypes.string,\n    positionY: PropTypes.string,\n  }),\n};\n","function rgbToHex(r, g, b) {\n  if (r > 255 || g > 255 || b > 255) throw 'Invalid color component';\n  return ((r << 16) | (g << 8) | b).toString(16);\n}\n\nexport default rgbToHex;\n","import rgbToHex from '../services/rgbToHex';\n\nfunction pickerDetector(canvasRef, event) {\n  const canvas = canvasRef.current;\n  const context = canvas.getContext('2d');\n  const rect = canvas.getBoundingClientRect();\n  const x = event.clientX - rect.left;\n  const y = event.clientY - rect.top;\n  const pixel = context.getImageData(x, y, 1, 1);\n\n  const data = pixel.data;\n\n  const hex = '#' + ('000000' + rgbToHex(data[0], data[1], data[2])).slice(-6);\n  const result = {\n    colorHex: hex,\n    positionX: x,\n    positionY: y,\n  };\n  return result;\n}\nexport default pickerDetector;\n","function gradientCanvasGenerator(canvasRef, colorHue) {\n  const canvas = canvasRef.current;\n  const context = canvas.getContext('2d');\n  context.fillStyle = colorHue;\n  context.fillRect(0, 0, canvas.width, canvas.height);\n\n  //create gradient\n  const grd = context.createLinearGradient(0, 0, canvas.width, 0);\n  grd.addColorStop(0, `rgba(255, 255, 255, 1)`);\n  grd.addColorStop(1, `rgba(255, 255, 255, 0)`);\n\n  // Fill with gradient\n  context.fillStyle = grd;\n  context.fillRect(0, 0, canvas.width, canvas.height);\n\n  const grd2 = context.createLinearGradient(0, 0, 0, canvas.height);\n  grd2.addColorStop(0, `rgba(0, 0, 0, 0)`);\n  grd2.addColorStop(1, `rgba(0, 0, 0, 1)`);\n\n  context.fillStyle = grd2;\n  context.fillRect(0, 0, canvas.width, canvas.height);\n}\n\nexport default gradientCanvasGenerator;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Picker from './Picker';\nimport '../stylesheets/components/_canvas.scss';\nimport pickerDetector from '../services/pickerDetector';\nimport gradientCanvasGenerator from '../services/gradientCanvas';\nimport { heightCanvas, widthCanvas } from '../utils/constants';\n\nconst Canvas = (props) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    gradientCanvasGenerator(canvasRef, props.color);\n  }, [props.color]);\n\n  const handleColorSelected = (event) => {\n    const pickerData = pickerDetector(canvasRef, event);\n    props.handleColorPicker(\n      pickerData.colorHex,\n      pickerData.positionY,\n      pickerData.positionX\n    );\n  };\n\n  return (\n    <div className=\"color__panel\">\n      <Picker positionPicker={props.positionPicker}></Picker>\n      <canvas\n        className=\"color__panel--canvas\"\n        ref={canvasRef}\n        width={String(widthCanvas)}\n        height={String(heightCanvas)}\n        onClick={handleColorSelected}\n      ></canvas>\n    </div>\n  );\n};\n\nexport default Canvas;\n\nCanvas.propTypes = {\n  color: PropTypes.string,\n  positionPicker: PropTypes.shape({\n    positionX: PropTypes.string,\n    positionY: PropTypes.string,\n  }),\n  handleColorPicker: PropTypes.func,\n};\n","function hueCanvasGenerator(canvasRef) {\n  const canvas = canvasRef.current;\n\n  let gradient = canvas\n    .getContext('2d')\n    .createLinearGradient(0, 0, canvas.width, 0);\n  gradient.addColorStop(0, '#ff0000');\n  gradient.addColorStop(1 / 6, '#ffff00');\n  gradient.addColorStop((1 / 6) * 2, '#00ff00');\n  gradient.addColorStop((1 / 6) * 3, '#00ffff');\n  gradient.addColorStop((1 / 6) * 4, '#0000ff');\n  gradient.addColorStop((1 / 6) * 5, '#ff00ff');\n  gradient.addColorStop(1, '#ff0000');\n  canvas.getContext('2d').fillStyle = gradient;\n  canvas.getContext('2d').fillRect(0, 0, canvas.width, canvas.height);\n}\n\nexport default hueCanvasGenerator;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport pickerDetector from '../services/pickerDetector';\nimport hueCanvasGenerator from '../services/hueCanvas';\n\nconst Hue = (props) => {\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    hueCanvasGenerator(canvasRef);\n  }, []);\n\n  const handleColorSelected = (event) => {\n    const pickerData = pickerDetector(canvasRef, event);\n    props.handleColorHue(pickerData.colorHex);\n  };\n  return (\n    <canvas\n      className=\"hue\"\n      ref={canvasRef}\n      height=\"30px\"\n      width=\"300px\"\n      onClick={handleColorSelected}\n    ></canvas>\n  );\n};\n\nexport default Hue;\n\nHue.propTypes = {\n  handleColorHue: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/components/_color-input.scss';\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(ev) {\n    let color = ev.target.value;\n    if (!color.includes('#', 0)) {\n      color = '#' + color;\n    }\n    this.props.handleColorInput(color);\n  }\n\n  render() {\n    return (\n      <div className=\"color__input\">\n        <label htmlFor=\"color__input--label\">Color selected: </label>\n        <input\n          className=\"color__input--input\"\n          id=\"color-input\"\n          type=\"text\"\n          value={this.props.colorInput}\n          onChange={this.handleChange}\n          placeholder=\"Write the color HEX code\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Input;\n\nInput.propTypes = {\n  colorInput: PropTypes.string,\n  handleColorInput: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport '../stylesheets/components/_color-picker.scss';\nimport '../stylesheets/layout/_main.scss';\nimport { heightCanvas, widthCanvas } from '../utils/constants';\nimport Canvas from './Canvas';\nimport Hue from './Hue';\nimport Input from './Input';\n\nconst App = () => {\n  const [colorSelected, setColorSelected] = useState('#ff0000');\n  const [colorInput, setColorInput] = useState('#ff0000');\n  const [colorStartGradient, setColorStartGradient] = useState('#ff0000');\n  const [positionPicker, setPositionPicker] = useState({\n    positionX: '0',\n    positionY: '' + widthCanvas,\n  });\n\n  const handleColorHue = (color) => {\n    setColorInput(color);\n    setColorSelected(color);\n    setColorStartGradient(color);\n    setPositionPicker({\n      positionX: '0',\n      positionY: '' + widthCanvas,\n    });\n  };\n\n  const handleColorInput = (color) => {\n    setColorInput(color);\n    setColorStartGradient(color);\n    setColorSelected(color);\n    setPositionPicker({\n      positionX: '0',\n      positionY: '' + widthCanvas,\n    });\n  };\n  const handleColorPicker = (color, x, y) => {\n    setColorSelected(color);\n    setColorInput(color);\n    setPositionPicker({\n      positionX: '' + x,\n      positionY: '' + y,\n    });\n  };\n\n  return (\n    <main className=\"main\">\n      <h1 className=\"title\">Color picker</h1>\n      <h3 className=\"title__h3\">\n        Please, select your color using the picker on the canvas or write the\n        HEX code\n      </h3>\n      <Input\n        colorInput={colorInput}\n        handleColorInput={handleColorInput}\n      ></Input>\n\n      <Hue handleColorHue={handleColorHue}></Hue>\n\n      <section className=\"color__picker\">\n        <div\n          className=\"color__picker--selected\"\n          style={{ backgroundColor: colorSelected }}\n        ></div>\n        <Canvas\n          color={colorStartGradient}\n          handleColorPicker={handleColorPicker}\n          positionPicker={positionPicker}\n        ></Canvas>\n      </section>\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}