{"version":3,"sources":["services/postDataToApi.js","components/ReceiptResult.js","components/InputFile.js","components/Share.js","components/App.js","index.js"],"names":["postDataToApi","dataFromComponent","urlServer","axios","post","headers","then","res","data","ReceiptResult","props","blocks","id","begin_row","begin_col","end_row","end_col","className","InputFile","fr","FileReader","myFileField","React","createRef","uploadFile","bind","getFile","ev","currentTarget","files","length","myFile","this","updateFile","file","result","htmlFor","generalValue","label","labelbtnUpload","type","name","ref","onChange","Component","Share","onClick","handleShare","btnText","App","renderResult","state","map","block","analizing","setState","dataToSend","FormData","append","method","linkShare","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9aa15237.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst apiUrl = '//127.0.0.1:8000/';\r\n\r\nconst postDataToApi = (dataFromComponent) => {\r\n  const urlServer = `${apiUrl}`;\r\n\r\n  return axios\r\n    .post(urlServer, dataFromComponent, {\r\n      headers: { 'Content-type': 'multipart/form-data' },\r\n    })\r\n    .then((res) => res.data);\r\n};\r\n\r\nexport default postDataToApi;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/layout/_result.scss';\n\nconst ReceiptResult = (props) => {\n  const { id, begin_row, begin_col, end_row, end_col } = props.blocks;\n\n  return (\n    <section className=\"results\">\n      <h3 className=\"results__title\">Block number {id}</h3>\n      <div className=\"results__values\">\n        <p>The begin row is: {begin_row}</p>\n        <p>The begin column is: {begin_col} </p>\n        <p>The end row is: {end_row}</p>\n        <p>The end column is: {end_col}</p>\n      </div>\n    </section>\n  );\n};\n\nexport default ReceiptResult;\n\nReceiptResult.propTypes = {\n  blocks: PropTypes.shape({\n    id: PropTypes.number,\n    begin_row: PropTypes.number,\n    begin_col: PropTypes.number,\n    end_row: PropTypes.number,\n    end_col: PropTypes.number,\n  }),\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../stylesheets/layout/_fill.scss';\r\n\r\nclass InputFile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fr = new FileReader();\r\n    this.myFileField = React.createRef();\r\n    this.uploadFile = this.uploadFile.bind(this);\r\n    this.getFile = this.getFile.bind(this);\r\n  }\r\n\r\n  uploadFile(ev) {\r\n    if (ev.currentTarget.files.length > 0) {\r\n      const myFile = ev.currentTarget.files[0];\r\n      this.props.updateFile(myFile);\r\n    }\r\n  }\r\n\r\n  getFile() {\r\n    const file = this.fr.result;\r\n    this.props.updateFile(file);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <label className=\"fill__form--label\" htmlFor={this.props.generalValue}>\r\n          {this.props.label}\r\n        </label>\r\n        <div className=\"fill__form--file\">\r\n          <label className=\"fill__form--file--button \">\r\n            {this.props.labelbtnUpload}\r\n\r\n            <input\r\n              type={this.props.type}\r\n              name=\"\"\r\n              id=\"\"\r\n              ref={this.myFileField}\r\n              className=\"fill__form--file--input\"\r\n              onChange={this.uploadFile}\r\n            />\r\n          </label>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default InputFile;\r\n\r\nInputFile.propTypes = {\r\n  type: PropTypes.string,\r\n  labelbtnUpload: PropTypes.string,\r\n  label: PropTypes.string,\r\n  uploadFile: PropTypes.func,\r\n  generalValue: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../stylesheets/layout/_share.scss';\r\n\r\nconst Share = (props) => {\r\n  const handleShareButton = () => {\r\n    props.handleShare();\r\n  };\r\n  return (\r\n    <div className=\"share__create\">\r\n      <button\r\n        className=\"share__create--button js-create-btn\"\r\n        onClick={handleShareButton}\r\n        type=\"button\"\r\n      >\r\n        <i className=\"share__button--icon\"></i>\r\n        {props.btnText}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Share;\r\n\r\nShare.propTypes = {\r\n  btnText: PropTypes.string,\r\n};\r\n","import React from 'react';\nimport postDataToApi from '../services/postDataToApi';\nimport '../stylesheets/layout/_fill.scss';\nimport ReceiptResult from './ReceiptResult';\nimport InputFile from './InputFile';\nimport Share from './Share';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blocks: [],\n      file: '',\n      analizing: false,\n      btnText: 'Send the receipt',\n    };\n\n    this.handleShare = this.handleShare.bind(this);\n    this.updateFile = this.updateFile.bind(this);\n  }\n\n  handleShare() {\n    if (!this.state.analizing && this.state.file !== '') {\n      this.setState({ analizing: true });\n      const dataToSend = new FormData();\n      dataToSend.append('file', this.state.file);\n\n      postDataToApi(dataToSend).then((data) => {\n        this.setState({ blocks: data.blocks, btnText: 'Reset' });\n      });\n    }\n    if (this.state.analizing) {\n      this.setState({\n        blocks: [],\n        file: '',\n        analizing: false,\n        btnText: 'Send the receipt',\n      });\n    }\n  }\n\n  updateFile(file) {\n    this.setState({ file: file });\n  }\n\n  renderResult = () => {\n    if (this.state.blocks.length !== 0) {\n      return this.state.blocks.map((block) => {\n        return <ReceiptResult key={block.id} blocks={block}></ReceiptResult>;\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <form method=\"post\" className=\"app__form js-submit\">\n          <fieldset className=\"fill js-collapsable-container\">\n            <InputFile\n              labelbtnUpload=\"Add your receipt\"\n              label=\"Select the receipt file\"\n              generalValue=\"text\"\n              type=\"file\"\n              updateFile={this.updateFile}\n            />\n          </fieldset>\n          <fieldset className=\"share js-collapsable-container\">\n            <Share\n              handleShare={this.handleShare}\n              linkShare={this.state.linkShare}\n              result={this.state.result}\n              btnText={this.state.btnText}\n            />\n          </fieldset>\n        </form>\n        {this.renderResult()}\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}